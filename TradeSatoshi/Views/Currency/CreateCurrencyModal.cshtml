@model TradeSatoshi.Common.Currency.CreateCurrencyModel
@{
	Layout = "~/Views/Shared/_Modal.cshtml";
}

<div class="modal-dialog">
	<div class="modal-content">
		<div class="modal-header">
			<button class="close simplemodal-close" aria-hidden="true" type="button" onclick="$.modal.close();">×</button>
			<h3 class="modal-title"><span class="symbol"></span>Create Currency</h3>
			<small>Create a new exchange currency.</small>
		</div>
		@using (Ajax.BeginForm("Create", "Currency", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "simplemodal-data", InsertionMode = InsertionMode.Replace }, new { @class = "form-horizontal" }))
		{
		@Html.AntiForgeryToken()
			<div class="row">
				<div class="col-md-12">
					@Html.ValidationSummary(true, "", htmlAttributes: new { @class = "alert alert-danger text-center" })
				</div>
			</div>
			<div class="modal-body">
				<div class="row">
					<div class="col-xs-12">

						<div class="form-group">
							<div class="col-md-2">
								@Html.LabelFor(m => m.Name, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.Name, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.Name)
							</div>
							<div class="col-md-2">
								@Html.LabelFor(m => m.Symbol, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.Symbol, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.Symbol)
							</div>
							<div class="col-md-2">
								@Html.LabelFor(m => m.Status, new { @class = "control-label" })
								@Html.EnumDropDownListFor(m => m.Status, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.Status)
							</div>
							<div class="col-md-2">
								<div class="checkbox" style="padding-top: 25px">
									<label>
										@Html.CheckBoxFor(model => model.IsEnabled)
										@Html.Resource("IsEnabled")
									</label>
								</div>
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-2">
								@Html.LabelFor(m => m.MarketSortOrder, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MarketSortOrder, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.MarketSortOrder)
							</div>
							<div class="col-md-2">
								@Html.LabelFor(m => m.Type, new { @class = "control-label" })
								@Html.EnumDropDownListFor(m => m.Type, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.Type)
							</div>
							<div class="col-md-2">
								@Html.LabelFor(m => m.InterfaceType, new { @class = "control-label" })
								@Html.EnumDropDownListFor(m => m.InterfaceType, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.InterfaceType)
							</div>
							<div class="col-md-2">
								@Html.LabelFor(m => m.Algo, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.Algo, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.Algo)
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-12">
								@Html.LabelFor(m => m.StatusMessage, new { @class = "control-label" })
								@Html.TextAreaFor(m => m.StatusMessage, new { @class = " form-control form-control-fullwidth", rows = 3 })
								@Html.ValidationMessageFor(m => m.StatusMessage)
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-3">
								@Html.LabelFor(m => m.MinConfirmations, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MinConfirmations, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.MinConfirmations)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.TransferFee, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.TransferFee, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.TransferFee)
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-3">
								@Html.LabelFor(m => m.TradeFee, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.TradeFee, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.TradeFee)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.MinBaseTrade, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MinBaseTrade, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.MinBaseTrade)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.MinTrade, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MinTrade, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.MinTrade)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.MaxTrade, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MaxTrade, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.MaxTrade)
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-3">
								@Html.LabelFor(m => m.WithdrawFeeType, new { @class = "control-label" })
								@Html.EnumDropDownListFor(m => m.WithdrawFeeType, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.WithdrawFeeType)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.WithdrawFee, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.WithdrawFee, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.WithdrawFee)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.MinWithdraw, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MinWithdraw, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.MinWithdraw)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.MaxWithdraw, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.MaxWithdraw, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.MaxWithdraw)
							</div>
						</div>

						<div class="form-group">
							<div class="col-md-3">
								@Html.LabelFor(m => m.WalletHost, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.WalletHost, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.WalletHost)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.WalletPort, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.WalletPort, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.WalletPort)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.WalletUser, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.WalletUser, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.WalletUser)
							</div>
							<div class="col-md-3">
								@Html.LabelFor(m => m.WalletPass, new { @class = "control-label" })
								@Html.TextBoxFor(m => m.WalletPass, new { @class = " form-control" })
								@Html.ValidationMessageFor(m => m.WalletPass)
							</div>
						</div>

					</div>
				</div>
			</div>

			<div class="modal-footer">
				<input type="submit" value="@Html.Resource("Create")" class="btn btn-default" />
				<button type="button" class="btn btn-primary simplemodal-close" onclick="$.modal.close();">Cancel</button>
			</div>
		}
	</div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
	$('#simplemodal-container').addClass('modal-medium');
</script>


