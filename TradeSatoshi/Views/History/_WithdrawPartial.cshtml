<div class="panel panel-default">
	<div class="panel-heading">
		<h3 class="panel-title">Withdrawals</h3>
	</div>
	<div class="panel-body">
		<table id="table-withdraw" class="table">
			<thead>
				<tr>
					<th>Id</th>
					<th>User</th>
					<th>Symbol</th>
					<th>Amount</th>
					<th>Fee</th>
					<th>Net Amount</th>
					<th>Status</th>
					<th>Confirmations</th>
					<th>Txid</th>
					<th>Address</th>
					<th>TimeStamp</th>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>
	</div>
</div>

<script id="menuTemplate" type="text/html">
	<span>
		<a onclick="cancelWithdraw({{id}});" title="Cancel Withdrawal">Cancel...</a>
		<a onclick="resendEmail({{id}});" title="Resend withdrawal confirmation email" style="margin-left:10px">Resend Email...</a>
	</span>
</script>

<script>
	var menuTemplate = $('#menuTemplate').html();
	var table = $('#table-withdraw').dataTable({
		"order": [[0, "desc"]],
		"lengthChange": false,
		"processing": true,
		"bServerSide": true,
		"searching": true,
		"scrollCollapse": false,
		"scrollY": '600px',
		"oSearch": { "sSearch": "@ViewBag.Search" },
		"sPaginationType": "simple_numbers",
		//"pageLength": 15,
		"sort": true,
		"paging": true,
		"info": true,
		"language": { "emptyTable": "No data avaliable.", "search": "", searchPlaceholder: "Search withdrawals" },
		"sAjaxSource": '@Url.Action("GetWithdraws")',
		"sServerMethod": "POST",
		"columnDefs": [{ "targets": 1, "visible":false },
		{
			"targets": 8,
			"searchable": false,
			"orderable": false,
			"render": function (data, type, full, meta) {
				if (full[6] === 'Unconfirmed') {
					return Mustache.render(menuTemplate, { id: full[0] });
				}
				return data;
			}
		}]
	});

	function cancelWithdraw(id) {
		postJson('@Url.Action("CancelWithdraw")', { withdrawId: id }, function (data) {
			showAlertResult(data);
			table.fnDraw();
		});
	}

	function resendEmail(id) {
		postJson('@Url.Action("ResendConfirmationEmail")', { withdrawId: id }, function (data) {
			showAlertResult(data);
			table.fnDraw();
		});
	}
</script>


