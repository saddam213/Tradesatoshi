@model TradeSatoshi.Models.Account.UserProfileModel
@{
	object attribs = Model.CanUpdate
		? (object)new { @class = "form-control" }
		: (object)new { @class = "form-control", @readonly = "readonly" };
}

@using (Html.BeginForm("UserProfile", "Account"))
{
	@Html.AntiForgeryToken()
	@Html.HiddenFor(m => m.CanUpdate)
	<div class="form-horizontal">
		<h4>@Html.Resource("Profile")</h4>
		<hr />
		@Html.ValidationSummary(true)
		<div class="form-group">
			@Html.ResourceLabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.FirstName, attribs)
				@Html.ValidationMessageFor(model => model.FirstName)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.LastName, attribs)
				@Html.ValidationMessageFor(model => model.LastName)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.BirthDate,attribs)
				@Html.ValidationMessageFor(model => model.BirthDate)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.Address, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.Address, attribs)
				@Html.ValidationMessageFor(model => model.Address)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.City, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.City, attribs)
				@Html.ValidationMessageFor(model => model.City)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.State, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.State, attribs)
				@Html.ValidationMessageFor(model => model.State)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.Country, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.Country, attribs)
				@Html.ValidationMessageFor(model => model.Country)
			</div>
		</div>

		<div class="form-group">
			@Html.ResourceLabelFor(model => model.PostCode, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextBoxFor(model => model.PostCode, attribs)
				@Html.ValidationMessageFor(model => model.PostCode)
			</div>
		</div>

		@if (Model.CanUpdate)
		{
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="@Html.Resource("Update Profile")" class="btn btn-default" />
				</div>
			</div>
		}
	</div>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
